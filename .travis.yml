language: python

python:
  - 3.6

env:
  global:
    - secure: UkcesLujiMQ8UQo59Gneyi+K/v8y4rCFIb7+b3KlzSDescHgh8pv77t4YVQxV7NVC5OFIcr95ikbVcg5wbldQ+hIfMwasfhNi0JTpu3Iu15Kh/2o4nGb9Qux6OyM4f9kj4qB1VAjIwxvjiWAdRXVB8BYCaZUZA0CcjzENXAYHOOLY9LE6VhwN37i0FWqP1jIKJLE3n6xE9CfcEZIgHUVDOPdf2668zEtO8nLzv8Up/VPD96g4cyoIVLYlq33rKdjO90EwCKDmYdAhmzlD1vZFEY4RfgiJICUoYkH/usKxSAQm0nyOvTcAFCo4Q6pVIRn3c2uxwC+9ie0Z/XUyIZzeJ5Xw3TvHpJm9/Zn6ZnZLgWbzAwa9b5iro6G/tfsKmQ+T8HnASocIfLmz5IiOTP3CpAMHMyvC1iq7oihZ8Uj4tj+K7B4yBAYJcCGSdto1UUIRZYhudeZtC7Q6DEs0ph4W9BGLeTqZlAHwDfNcxzaw9SsUbI7DSu1KTqUw0pjjmkxK9PaHOU3t/aIZScMC2+3CSg2qYLuEUkNg3guIUIkPXSynWoVr2ba6jWmVr4IDVKdkP4vNMkAlVF/qpWK+Ht5HsqJ+c0z4EQCE/WILrL/DyQyqCFfON0K+sN8zrffX2nI/1JttB3EWfEkEF80M3IXt1XAEHxmXD+xsWzIIcIhVG0=
    - secure: B/TDo/SR5kgvVnFLpihKglRSzAFSfsoU6TGumqnRLjpXLyaj3iacateTaCqqU6vvnEz8VSiApkkYUq/tam7SboXKYDG6xGF8zFLsjPIPOz6ALcIaQ0FSpbqScoU68c8/FQkNjDPhn5R1gAvbmOaT5VIvw51/oyrXGY7zlyseeH7DYL46R/X45jivxlXlo9EYc/laSgjxhfY2Gc7LE60EPjVam1QYOmJoGjtXT5adco9D+xvbDwgEK9MrwcSvWgPauOqTSH/V3Ngh2EH61yVoLhYBnqaiGkH5A+eF/DKGfUTdzDmxZXunXJhkeQ0DFpmiND7h9MqRWMVX2wc6ElVWmcgUBCkXMLHfj0LBvtMVwq2IKBpPnaOj0JNr9d/2RC4WUJXCyZbksZh8euN8/OvMxnR09vYLgM9oZgBZXhKvzvQkink39jmtu8TybMRrNLOvfM8djEVxgRvIznAiAMOHRKEBcTVmwMfqT305V8Z5uGfrSwDcjNqpzoSC7g6lBPnuMMXw1/rzMs9o1LsRfTiI+sBvEAsg5U4Nrul1xvrKQca+IN7ly9lxHmQEhIT4J6YuQpzb36LdEeBZ71OKsQ+EG3CcYpk1v+fQwLdtUdPQOFyl8K0pdVOTrGawkOiPQdoosJSVIBmlJwSqTthqiiEo+zit2K+DDAojdnRCCFPiN5o=
    - secure: SKYtre0K68WODn0QvhTbtlqapf3qZN6SMi6eOYj/yTbkycD2PbcIU7SIGAnVAZ0D7updrdIshhzDw6bmPvRfTtcOg5DibX22K3bC05bCq9g/IVXU/ASzxTYBkcME11vpGzvEYQEZpZNJsMJGCElMsB+Ep9y+ACKM7bOHx4H3r1/9Dr5KzlchWCTeTPsi9ABuJt7mx+4tsS/a8iXLVySDyo2G3QUi8R4j1FR7obQFMzQ0xK+wR9qhJAbwudQ6zwwxsoIyzJOWbVE5hbzB0+ZUoJLxo+8qXCzlZCufCXPqg9Q7V0btAn4vyKv0twAonjCYHI/32/ZrSmM7rS94cO96CeHfDvRhoFdqd0ZdogLLpflpsa+GVS2zEInNVLXL0HkQjxgNTjkJ4ZDr9W012pKIXM+QFm9JHlOvrYlp4RocqMpT68f0f88IzpaU3lhp6boxs+iSD6kKExApNmNKI2FxXY9obfMKOLoCfBfL6IhOSu+zKlg7Z8xNo5D9fRHIM6ZRJcg+Yk+Mmuafhv1pDgeN2Ru11/rv/1WmH8JgQQqMGxc0b26M5zPYYDqx9iIZhQslm+k3zm6xYuWmpMASyNTZUhS0Bef7KqgV8hrq1d8nj3gYmcgHgzeIjaj6bIzevSPyZEmDNYVA1y/rlHlg5qDAFrwdjSeTMjPdXK2riTZohhA=
    - secure: E3nWQgqCz9KZarlfEPlF09tlP3OkzXSqEF4wAeOegVhfDwsOkzlzQwLJr8QUF5SIIk1ewNF6KqxctCL4HB1jHt4j6dX3uQ+RjFH76N239RhXfd4m/52ZbekKf10YJTYOupYdt/YWoZsybJG59QG8sISOo9SddExoBL8K0Nl6/AQIGeFzSPrbs7jFrxY97M9TXs7B/X1XXhaCAVnTHMkEa4rbOX2VbQxJEJoqPSMb/1KxWdDiIguAulXVFeCF1XJ2f3BStcJclvDPqMOVOsn6wUznM5vK9jmpRVjVX8IFkV3+xiM6X7wA0AW2xiUJaJghpezjeEHq30K4XKzcoKM5AajEa2uqo99q3BPruVEQQ1wm8XG6YdIf7XiltvH31nOny9eU35UdixmOzsbh6L6tsifFKWC3ihebL0JWog8+2skRYD9Dk/TkKohQkrmNlQK9XHO5kJ/NtTXyd/KBNSJoKDOWsmO9ZyaQt0utARG2Bfg0Vq9Ik7iSIf+2J/KeF6t8+Zt2d6Ke0k05V6f8cETUAnedZZ+vTp/lBjPaSGi6qRzpJ/XUeyCnnxQdDlXfbhXdko1HkBk5IO5WvKSjGMoEFEGBvkFaQyzVTVJnxtHfzvXqN9ryJRM7aGKuwh1ws7/gTVJGUcxmzniq8OTN9WBTKNbiclc+zLplklDSYI0Vm7o=
    - secure: QeFyItoSIk/3xRZpKBxMQ3/d1h3cS+oXH0wWIlbmMVO88jyLaPpwfW2MOoMgv51FwO6w9iBVYAy8G5VcG7rZdNg7zq7luq72tWENOXNTnYYydBlkntfV1LnAZkMie6m8DW3Ji1+bmLZVjYnli3pVp2UWoV39CvxCd9/U+SnSo4YVTme9iMhtC9cR+AuBJXx0qEaBuNKaDeXHlvhDMFlWFso1zImcMLjGggrZvmZ/HhIziTLDRMeCJanAuNK+AZI5KQnrk2LKkfyXpsfi+Tl31luiH3SGe1MoLHtktfj7VEQ8BgMKQc8fCS2xI/87GnkCT7tV++5SXYu0qfRqyGXoxci9qmoCIvRbNRICl1bHkovz4mWF4VTY0cRkqvPR9LkTeAkFq+2Z6LVw9jdUrnIQ9ePjImmCRyeYpgZyGbNMEW6v/SCmLicx/pYqmq1Rh1V/SBtPmvZPMk0MMjwXLYMhK8YamuLEq8Bc86Yxol3qv3DAkFxUwNVQUsYrPVgcLj0u/VvDPwwbAQQBGc9yABw+B7mYFXkRiZWgYNkDUdj9a3685g3ft2bNTxiWbK5u+/FzK/GWO5KVUlAg92rYG9MhooDGoyB/B1gouaNVryAQrcuLlSreOuzzK6EDmQEPjA3Ldy08n3MxmR61vRi3wql5Co272p51yoCpvGo+RLoUH7o=
    - secure: EMtHh8x2rlWwYRZyjro8vBmDrMUfw4K1OeXiEVL7hAWpZAhmNDryrZCcQkXTVXx3iIwVIJSn4DyCTqIUA7B5RKorX45URla6CqmScky2z/9tKoQmOKOA7AwgJe/4QAWUqYKRVoQUe6Duc/yopHoeCGnWhUrRxTZWel38OMdybSuNvAplzpF9oXx99vIXKpd1dcGdLjBSy/X7r7EQewvMtgh8yZh2rom2WPpUq1P//MZCmfdtmPc+gvg+D1ve4rIcFkPCDZ2tc2Q4fK3EcQow66l2Mr/o4OCD2aTbTSmKYiexk3Nvg2Zo+poxTNTwyLezFfLp2mN5ylRPox5kLmjy2y5mieuPYLbzzaKQxnx3nDzU1dC9dEA11/MenckGEiwcgNdTh94r7x4aqpFZH9wy0b4k/2/cFfdZYXKs+GKHbLxXArf8uGhRaqFJThEi5WHrMAkwHkvvLyJhY6HWbRJ/URLybsYXRjI1RNjyc1aueJVl8wNn5MNmMiiAzSTrQf+B8nu2LA27aTjX9kbYOVjyXIyoVJ1LVmOQApzgkebZvOnXXXUZ9lSrO4kOR6gkz0mXJSAY1JCXt7ZAgjN5AHJ+pDvqlA95RJ7YXyfYzRr2+BWrf01bp5IA5wi0SArBemhZhYESMJnIoSGeganuVf/NSmUkB71EzqnjZVjxRncVlj0=
    - secure: bppkxtDYM57UHLSTsQH3692vyIV8YxLRFjbmYa3RsPI2SeF0hD5sv3dvPhEmGxX/IcyUgGQeWYOoq2D4phtzoJ4mLpL1zn3feyUjNAebEke8gAHuyPJ2vDhQeqS5JUrUGu49vH5IZcjlI0sbIshOaXdUawX6DL4VUF1U0m/VUDpVSIY7yqMqBls43kpjh/aL0M6dg3T9P1pXjpnhaZFGlNpwY+FuL5r5HaURi+nvIJ2twmK0F2oXPTbyYzNHIq+NishLxrDa6al+36Av0Rma8UAa8sSMNHGwfyH1fZZT9QUdM+oDFA647FbXJNav4N+YYfuv90Z6LEfCM8N2x3tGwdIgEopjXg+y9OuMwAbN6/AN1VehC3tQXv6Se7PGSQRoMeB79mlG50EIW8KLSzmGMVAX/qVEwXtEvCg6d7eA6faHHnqGPuAkuNoecWJWZRURKgQ3Ilfu/JRSuY6R1Y2Mg2JBMqq092VFRi88RNj3vNtlAD8+tX0dOew8t/h8HxFiZ1xwqsCjxENriaha75RrxzrBZ3hmIaMIAQELBgcWgfjgRwUnnHPmUSAqjYq4m8sTKzDTJTMgcvXJS+aijNeU468znEKE+AmKfAohznEaj4jt7uIZhJD9Jh164wsCaj3YBDViF2ljGmXJuP9PuFTf9iI8cOobgb0xYcNkeLCDaFg=
    - secure: iCcSgokg7uulzgWsxRl91ug15G8L/uj1M0VIOC8fwE/BvMjzJqZ6FJBBIIAzo12agy+v8CLVz/aF6J6YczJ9Y13vpvWJA7A6lQod9UD15DjiEMkJlXafbW5+GCIeVYaGYt4HdhuKNDJBiUvaTBXlhjv6Q8KcbFRcbASSe99TvuE6lVDw+TnQfYcIfCB8TN5wKzXbrM0UMbqcNo8mw51Y5LUXkz8SPNgwZ24vBjowktEXLFJ/RO2R0sJASPtG7owo/SG7jkyJm6vOGxgG4qHh0Bi62/iHRKgK3Vfvz/mTM5WUlqsc9FhTVa89oKbFnNcTh8E6dI3e4BzCqgEbl6t7+ypOhla1/kc4lk5b/wgP/van9xUoz/Qq18tqIXi/daatBVWsUavrJhp4yTIcM/+MwQCE3E72y55zr+2JqD+bHg91DKZzsFjYXF2k+RYOzPk3EuJWmCt38VSbPlRD4yiuBuMyfv7vYgmMOz6dovKDAU4rL0hEYcNsoj25OllzPw2aWlGy0XgOJwoujTDDJKwEVPc8fKuvLjQP44uw09fneFD80hbkL0Bk/18NBnZ/l5t462VW3Dy3qPY4FovoMaynA16yVvGd7I+xH6Xec8XUM2s2Vydl1Q7IedYFS1NPPEuriR4B1tqgf6gSHFu+1qiSRRYZh8ml93RN+nP+QiLOoOo=

install:
  - pip install coveralls
  - pip install -r requirements.txt

script:
  - make test

after_success:
  - cd src; coveralls
  - scripts/docker-create-and-deploy-image.sh

#before_install:
#  - echo -e "Host $DEPLOY_HOST\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
#  - openssl aes-256-cbc -K $encrypted_bca821787209_key -iv $encrypted_bca821787209_iv
#    -in sandbox/certificates/id_rsa_fe_travis.enc -out deploy-key -d
#

#language: generic
#sudo: required
#services:
#- docker
#
#
#before_install:
#  - echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
#
#install:
#  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
#  - docker build -f Dockerfile -t $TRAVIS_REPO_SLUG:$TAG .
#
#script:
#  - make travis.test
#
#after_success:
#  - docker push $TRAVIS_REPO_SLUG
#
#deploy:
#  skip_cleanup: true
#  provider: script
#  script:
#    - ./scripts/deploy.sh
#  on:
#    tags: true
#    branch:
#      - master
#      - acesso-ao-service-de-conta
#      - /(\d+\.)?(\d+\.)?(\*|\d+)$/
